/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {

    behaviors {
        rbrace: right_braces {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        rpren: right_paren {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        rbracket: right_bracket {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E               &kp R             &kp T             &kp Y        &kp U             &kp I        &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G             &kp H        &mt LEFT_SHIFT J  &mt LCTRL K  &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C               &kp V             &kp B             &kp N        &kp M             &kp COMMA    &kp DOT  &kp FSLH  &kp ESC
                         &kp LEFT_WIN        &kp SPACE         &lt 2 CAPSLOCK    &lt 2 ENTER  &kp ESC           &mo 2
            >;
        };

        NUM {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp BSLH   &kp BSLH     &kp EXCLAMATION  &kp EQUAL  &kp AMPERSAND  &kp PIPE          &kp DOLLAR  &rbrace         &rpren                &rbracket           &kp AT_SIGN  &kp N2
&kp LCTRL  &kp N0       &kp N1           &kp N2     &kp N3         &kp N4            &kp N5      &kp N6          &kp N7                &kp N8             &kp N9       &kp GRAVE
&kp LSHFT  &kp PERCENT  &kp ASTERISK     &kp PLUS   &kp MINUS      &kp UNDERSCORE    &kp HASH    &kp GRAVE       &kp SQT               &kp DOUBLE_QUOTES  &kp CARET    &kp TILDE
                                         &mo 2      &kp TAB        &kp SPACE         &kp RET     &kp ESCAPE      &mo 4
            >;
        };


        FUN {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5     &kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &trans
&trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15    &kp F16  &kp F17  &kp F18  &kp F19  &kp F20  &trans
&trans  &kp F21  &kp F22  &kp F23  &kp F24  &trans     &trans   &trans   &trans   &trans   &trans   &trans
                          &trans   &trans   &trans     &trans   &trans   &trans
            >;
        };
    };
};
